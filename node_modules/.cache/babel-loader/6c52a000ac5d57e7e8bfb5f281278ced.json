{"ast":null,"code":"var _jsxFileName = \"/home/steve/hci-frontend/src/App.js\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      render: \"study\",\n      side: \"Front\",\n      front: \"\",\n      back: \"\",\n      deck: \"\",\n      card: [{\n        front: \"f1\",\n        back: \"b1\"\n      }, {\n        front: \"f2\",\n        back: \"b2\"\n      }, {\n        front: \"f3\",\n        back: \"b3\"\n      }],\n      index: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.renderSwitch()));\n  }\n\n  renderSwitch() {\n    switch (this.state.render) {\n      case \"study\":\n        return this.renderStudy();\n\n      case \"deck\":\n        return this.renderDeck();\n\n      case \"word\":\n        return this.renderWord();\n\n      case \"select\":\n        return this.renderSelect();\n\n      default:\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"error\");\n    }\n  }\n\n  renderStudy() {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.state.card[this.state.index].front), React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n\n        if (e.target[0].value.toLowerCase() == this.state.card[this.state.index].back.toLowerCase()) {\n          this.setState({\n            index: 2\n          });\n        } else {\n          alert(\"flase\");\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.setState({\n        render: \"word\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Add word to deck\"));\n  }\n\n  renderDeck() {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Make a new Deck\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Enter the title of your Deck\"), React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        this.setState({\n          render: \"word\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: e => {\n        e.preventDefault();\n        this.setState({\n          deck: e.target.value\n        });\n      },\n      type: \"text\",\n      placeholder: \"French, Spanish, etc...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })));\n  }\n\n  renderWord() {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Add a Card to \", this.state.deck), React.createElement(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: this.state.side == \"Front\" ? \"light\" : \"dark\",\n      onClick: () => this.setState({\n        side: \"Front\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Front\"), React.createElement(Button, {\n      variant: this.state.side == \"Back\" ? \"light\" : \"dark\",\n      onClick: () => this.setState({\n        side: \"Back\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Back\")), React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n\n        if (this.state.side == \"Front\") {\n          this.setState({\n            side: \"Back\"\n          });\n        } else {\n          this.setState({\n            side: \"Front\",\n            front: \"\",\n            back: \"\"\n          });\n          alert(\"the card has been added to the deck\");\n        }\n      },\n      width: \"300px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.side == \"Front\" ? this.state.front : this.state.back,\n      onChange: e => {\n        e.preventDefault();\n\n        if (this.state.side == \"Front\") {\n          this.setState({\n            front: e.target.value\n          });\n        } else {\n          this.setState({\n            back: e.target.value\n          });\n        }\n      },\n      placeholder: this.state.side + \" of Card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" \", React.createElement(Button, {\n      onClick: () => this.setState({\n        render: \"select\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Study\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n      onClick: () => this.setState({\n        render: \"deck\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Make another Deck\"), \" \"));\n  }\n\n  renderSelect() {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Choose the Subject\"), React.createElement(\"div\", {\n      class: \"scroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setState({\n        render: \"study\",\n        deck: \"French\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"French\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Spanish\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Italian\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"German\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Latin\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Java\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Japanese\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Javanese\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Lorem\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Ipsum\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Virology\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Topic\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"French\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"French\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"French\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: e => alert(\"The list of decks is filtered by the search term, case-independant\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => this.setState({\n        render: \"deck\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Make a new deck\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/steve/hci-frontend/src/App.js"],"names":["React","Button","ButtonGroup","DropdownButton","Dropdown","App","Component","constructor","props","state","render","side","front","back","deck","card","index","renderSwitch","renderStudy","renderDeck","renderWord","renderSelect","e","preventDefault","target","value","toLowerCase","setState","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport './App.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {render:\"study\", side:\"Front\", front:\"\", back:\"\", deck:\"\", card:[{front:\"f1\", back:\"b1\"}, {front:\"f2\", back:\"b2\"}, {front:\"f3\", back:\"b3\"}], index:0};    \n    }\n    \n    render() {\n        return <div className=\"App\"><header className=\"App-header\">\n        {this.renderSwitch()}\n        </header></div>    \n    }\n    \n    renderSwitch() {\n        switch(this.state.render) {\n            case \"study\": return this.renderStudy()\n            case \"deck\": return this.renderDeck()       \n            case \"word\": return this.renderWord()         \n            case \"select\": return this.renderSelect()    \n            default: return <p>error</p>\n        }    \n    }\n\n    renderStudy() { return <>\n        <p>{this.state.card[this.state.index].front}</p>\n        <form onSubmit=\n                        {(e) => { e.preventDefault(); if(e.target[0].value.toLowerCase() == this.state.card[this.state.index].back.toLowerCase()) \n                                {this.setState({index:2})} \n                                else { alert(\"flase\") } } }>\n                <input type=\"text\" placeholder=\"Answer\" />\n                 </form>\n        <p /><button onClick={() => this.setState({render: \"word\"})}>Add word to deck</button>\n    </>\n    }\n\n    renderDeck() { return <>\n        <p>Make a new Deck</p>\n        <h3>Enter the title of your Deck</h3>\n        <form onSubmit={(e) => { e.preventDefault(); this.setState({render: \"word\"}) }} >\n                <input onChange={(e) => { e.preventDefault(); this.setState({deck:e.target.value}) }} type=\"text\" placeholder=\"French, Spanish, etc...\" />\n        </form>\n        </>    \n    }\n\n    renderWord() { return  <>\n        <p>Add a Card to {this.state.deck}</p>\n        <ButtonGroup>\n        <Button variant={this.state.side==\"Front\"? \"light\" : \"dark\"} onClick={() => this.setState({side: \"Front\"})}>Front</Button>\n        <Button variant={this.state.side==\"Back\"? \"light\" : \"dark\"} onClick={() => this.setState({side: \"Back\"})}>Back</Button></ButtonGroup>\n        <form onSubmit={(e) => {e.preventDefault(); \n                                if(this.state.side==\"Front\") { this.setState({side:\"Back\"})}\n                                else { this.setState({side:\"Front\", front:\"\", back:\"\"}); alert(\"the card has been added to the deck\")}} }\n        width=\"300px\">\n                <input type=\"text\" value={this.state.side ==\"Front\"? this.state.front : this.state.back }\n                                   onChange={(e) => { e.preventDefault();\n                                                     if(this.state.side==\"Front\") {this.setState({front:e.target.value})} \n                                                    else {this.setState({back:e.target.value})} }}\n                placeholder={this.state.side + \" of Card\"} />\n        </form>     \n        <p /><p />\n        <div> <Button onClick={() => this.setState({render: \"select\"})}>Study</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              <Button onClick={() => this.setState({render: \"deck\"})}>Make another Deck</Button> </div>\n        \n        </>\n    }\n\n\n\n\n\n    renderSelect(){ \n        return <>\n               <p>Choose the Subject</p>\n               <div class=\"scroll\">\n               <Button onClick={() => this.setState({render: \"study\", deck:\"French\"})}>French</Button><p />\n               <Button>Spanish</Button><p />\n               <Button>Italian</Button><p />\n               <Button>German</Button><p />\n               <Button>Latin</Button><p />\n               <Button>Java</Button><p />\n               <Button>Japanese</Button><p />\n               <Button>Javanese</Button><p />\n               <Button>Lorem</Button><p />\n               <Button>Ipsum</Button><p />\n               <Button>Virology</Button><p />\n               <Button>Topic</Button><p />\n               <Button>French</Button><p />\n               <Button>French</Button><p />\n               <Button>French</Button><p />\n               </div> \n                <p />\n               <form onSubmit={(e) => alert(\"The list of decks is filtered by the search term, case-independant\")} >\n                <input type=\"text\" placeholder=\"Search\" />\n                 </form>\n                <p />\n               <Button onClick={() => this.setState({render: \"deck\"})}>Make a new deck</Button>\n               </>\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}