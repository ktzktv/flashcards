{"ast":null,"code":"var _jsxFileName = \"/home/steve/hci-frontend/src/App.js\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      render: \"select\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.renderSwitch()));\n  }\n\n  renderSwitch() {\n    switch (this.state.render) {\n      case \"study\":\n        return this.renderStudy();\n\n      case \"deck\":\n        return this.renderDeck();\n\n      case \"word\":\n        return this.renderWord();\n\n      case \"select\":\n        return this.renderSelect();\n\n      default:\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"error\");\n    }\n  }\n\n  renderStudy() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"sentence\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.state.sBegin + \" \", this.getBlank(), this.state.sEnd), React.createElement(\"div\", {\n      className: \"translation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.sTrans), React.createElement(\"div\", {\n      className: \"definition\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.definition), React.createElement(AnswerForm, {\n      handleSubmit: (e, myForm) => this.onFormSubmit(e, myForm),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), this.renderStrength(), React.createElement(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"dark\",\n      onClick: e => this.setStateAdd(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Add Words\"), React.createElement(Button, {\n      variant: \"dark\",\n      onClick: e => this.setStateWelcome(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Main Menu\")));\n  }\n\n  renderDeck() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Deck\");\n  }\n\n  renderWord() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Word\");\n  }\n\n  renderSelect() {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Select\"), React.createElement(\"button\", {\n      onClick: e => this.setState({\n        render: \"study\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), \" \");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/steve/hci-frontend/src/App.js"],"names":["React","Button","ButtonGroup","DropdownButton","Dropdown","App","Component","constructor","props","state","render","renderSwitch","renderStudy","renderDeck","renderWord","renderSelect","sBegin","getBlank","sEnd","sTrans","definition","e","myForm","onFormSubmit","renderStrength","setStateAdd","setStateWelcome","setState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport './App.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {render:\"select\"};    \n    }\n    \n    render() {\n        return <div className=\"App\"><header className=\"App-header\">\n        {this.renderSwitch()}\n        </header></div>    \n    }\n    \n    renderSwitch() {\n        switch(this.state.render) {\n            case \"study\": return this.renderStudy()\n            case \"deck\": return this.renderDeck()       \n            case \"word\": return this.renderWord()         \n            case \"select\": return this.renderSelect()    \n            default: return <p>error</p>\n        }    \n    }\n\n    renderStudy() {\n      return <>\n        <div className=\"sentence\">\n          {this.state.sBegin + \" \"}\n          {this.getBlank()}\n          {this.state.sEnd}\n        </div>\n        <div className=\"translation\">\n          {this.state.sTrans}\n        </div>\n        <div className=\"definition\">\n          {this.state.definition}\n        </div>\n        <AnswerForm handleSubmit={(e, myForm) => this.onFormSubmit(e, myForm)} />\n        {this.renderStrength()}\n\n        <ButtonGroup>\n          <Button variant=\"dark\" onClick={(e) => this.setStateAdd(e)}>\n            Add Words\n          </Button>\n          <Button variant=\"dark\" onClick={(e) => this.setStateWelcome(e)}>\n            Main Menu\n          </Button>\n        </ButtonGroup>\n      </>\n    }\n\n    renderDeck() { return <p>Deck</p>}\n\n    renderWord() { return <p>Word</p>}\n\n    renderSelect(){ return <><p>Select</p><button onClick={(e) => this.setState({render: \"study\"})} /> </> }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}