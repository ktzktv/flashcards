{"ast":null,"code":"var _jsxFileName = \"/home/steve/flashcards/src/App.js\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      render: \"select\",\n      side: \"Front\",\n      front: \"\",\n      back: \"\",\n      deck: \"\",\n      card: [{\n        front: \"Est-ce que ____etes prets?\",\n        back: \"vous\"\n      }, {\n        front: \"il ____que j'y aille\",\n        back: \"faut\"\n      }, {\n        front: \"il est ____et sauf\",\n        back: \"sain\"\n      }],\n      index: 0,\n      answer: \"\",\n      placeholder: \"Answer\",\n      history: [],\n      flip: true\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.renderSwitch()));\n  }\n\n  renderSwitch() {\n    switch (this.state.render) {\n      case \"study\":\n        return this.renderStudy();\n\n      case \"deck\":\n        return this.renderDeck();\n\n      case \"word\":\n        return this.renderWord();\n\n      case \"select\":\n        return this.renderSelect();\n\n      default:\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"error\");\n    }\n  }\n\n  renderStudy() {\n    return React.createElement(React.Fragment, null, \" \", React.createElement(\"div\", {\n      className: \"StudyCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"dark\",\n      onClick: e => this.setState({\n        flip: !this.state.flip\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Flip Card?\"), this.flipCard(), React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n\n        if (e.target[0].value.toLowerCase() == this.state.card[this.state.index].back.toLowerCase()) {\n          this.setState({\n            index: (this.state.index + 1) % 3,\n            answer: \"\",\n            placeholder: \"Answer\",\n            flip: true\n          });\n        } else {\n          this.setState({\n            answer: \"\",\n            placeholder: \"Incorrect\"\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.answer,\n      onChange: e => this.setState({\n        answer: e.target.value\n      }),\n      placeholder: this.state.placeholder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => this.setState({\n        render: \"word\",\n        history: [...this.state.history, \"study\"]\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Add card to deck\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), \" \", React.createElement(Button, {\n      onClick: () => this.setState({\n        render: \"select\",\n        history: [...this.state.history, \"study\"]\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Study another deck\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), this.backButton());\n  }\n\n  renderDeck() {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Make a new Deck\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Enter the title of your Deck\"), React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n\n        if (e.target[0].value === \"\") {} else this.setState({\n          render: \"word\",\n          history: [...this.state.history, \"deck\"]\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: e => {\n        e.preventDefault();\n        this.setState({\n          deck: e.target.value\n        });\n      },\n      type: \"text\",\n      placeholder: \"French, Spanish, etc...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), this.backButton());\n  }\n\n  renderWord() {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Add a Card to \", this.state.deck), React.createElement(\"div\", {\n      className: \"StudyCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: this.state.side == \"Front\" ? \"dark\" : \"light\",\n      onClick: () => this.setState({\n        side: \"Front\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Front\"), React.createElement(Button, {\n      variant: this.state.side == \"Back\" ? \"dark\" : \"light\",\n      onClick: () => this.setState({\n        side: \"Back\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Back\")), React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n\n        if (this.state.side == \"Front\") {\n          this.setState({\n            side: \"Back\"\n          });\n        } else {\n          if (this.state.front == \"\" || this.state.back == \"\") {\n            this.setState({\n              side: \"Front\"\n            });\n          } else {\n            this.setState({\n              side: \"Front\",\n              front: \"\",\n              back: \"\"\n            });\n            alert(\"the card has been added to the selected deck\");\n          }\n        }\n      },\n      width: \"300px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.side == \"Front\" ? this.state.front : this.state.back,\n      onChange: e => {\n        e.preventDefault();\n\n        if (this.state.side == \"Front\") {\n          this.setState({\n            front: e.target.value\n          });\n        } else {\n          this.setState({\n            back: e.target.value\n          });\n        }\n      },\n      placeholder: this.state.side + \" of Card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" \", React.createElement(Button, {\n      onClick: () => this.setState({\n        render: \"select\",\n        history: [...this.state.history, \"word\"]\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Study another Topic\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n      onClick: () => {\n        this.setState({\n          render: \"study\",\n          history: [...this.state.history, \"word\"]\n        });\n        alert(\"The only available deck is french. Pretend as though these were the cards you entered.\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Study this Deck\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n      onClick: () => this.setState({\n        render: \"deck\",\n        history: [...this.state.history, \"word\"]\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Make a new Deck\"), \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), this.backButton());\n  }\n\n  renderSelect() {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Choose the Subject\"), React.createElement(\"div\", {\n      class: \"scroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.setState({\n        render: \"study\",\n        history: [...this.state.history, \"select\"],\n        deck: \"French\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"French\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => alert(\"Currently, the only example deck is French.\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Spanish\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => alert(\"Currently, the only example deck is French.\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Italian\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => alert(\"Currently, the only example deck is French.\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"German\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => alert(\"Currently, the only example deck is French.\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Latin\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => alert(\"Currently, the only example deck is French.\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Java\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => alert(\"Currently, the only example deck is French.\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Japanese\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => alert(\"Currently, the only example deck is French.\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Javanese\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => alert(\"Currently, the only example deck is French.\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Lorem\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => alert(\"Currently, the only example deck is French.\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Ipsum\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => alert(\"Currently, the only example deck is French.\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Virology\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => alert(\"Currently, the only example deck is French.\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Topic\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: e => alert(\"The list of decks is filtered by the search term, case-independant\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => this.setState({\n        render: \"deck\",\n        history: [...this.state.history, \"select\"]\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Make another deck\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), this.backButton());\n  }\n\n  backButton() {\n    if (this.state.history[0] === undefined) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Button, {\n        onClick: () => this.setState({\n          render: this.state.history.pop()\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Back\");\n    }\n  }\n\n  flipCard() {\n    if (this.state.flip) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \" \", this.state.card[this.state.index].front, \" \");\n    } else {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \" \", this.state.card[this.state.index].back, \" \");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/steve/flashcards/src/App.js"],"names":["React","Button","ButtonGroup","DropdownButton","Dropdown","App","Component","constructor","props","state","render","side","front","back","deck","card","index","answer","placeholder","history","flip","renderSwitch","renderStudy","renderDeck","renderWord","renderSelect","e","setState","flipCard","preventDefault","target","value","toLowerCase","backButton","alert","undefined","pop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport './App.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {render:\"select\", side:\"Front\", front:\"\", back:\"\", deck:\"\", card:[{front:\"Est-ce que ____etes prets?\", back:\"vous\"}, {front:\"il ____que j'y aille\", back:\"faut\"}, {front:\"il est ____et sauf\", back:\"sain\"}], index:0, answer:\"\", placeholder:\"Answer\", history:[], flip:true} \n    }\n    \n    render() {\n        return <div className=\"App\"><header className=\"App-header\">\n        {this.renderSwitch()}\n        </header></div>    \n    }\n    \n    renderSwitch() {\n        switch(this.state.render) {\n            case \"study\": return this.renderStudy()\n            case \"deck\": return this.renderDeck()       \n            case \"word\": return this.renderWord()         \n            case \"select\": return this.renderSelect()    \n            default: return <p>error</p>\n        }    \n    }\n\n\n\n\n\n\n\n\n\n\n    renderStudy() { return <> <div className=\"StudyCard\">\n        <Button variant=\"dark\" onClick={(e) => this.setState({flip:!this.state.flip})}>Flip Card?</Button>\n        {this.flipCard()}\n        <form onSubmit=\n                        {(e) => { e.preventDefault(); if(e.target[0].value.toLowerCase() == this.state.card[this.state.index].back.toLowerCase()) \n                                {this.setState({index:(this.state.index+1)%3, answer:\"\", placeholder:\"Answer\", flip:true})} \n                                else { this.setState({answer:\"\", placeholder:\"Incorrect\"}) } } }>\n                <input type=\"text\" value={this.state.answer} onChange={(e) => this.setState({answer:e.target.value})} placeholder={this.state.placeholder} />\n                 </form> </div>\n       <p /><p /><p /><p /><p /><Button onClick={() => this.setState({render: \"word\", history:[...this.state.history, \"study\"]})}>Add card to deck</Button>\n    <p /> <Button onClick={() => this.setState({render:\"select\", history:[...this.state.history, \"study\"]})}>Study another deck</Button>\n    <p /><p />{this.backButton()}\n    </>\n    }\n\n\n\n\n\n\n\n\n\n    renderDeck() { return <>\n        <p>Make a new Deck</p>\n        <h3>Enter the title of your Deck</h3>\n        <form onSubmit={(e) => { e.preventDefault(); if(e.target[0].value===\"\") {} else this.setState({render: \"word\", history:[...this.state.history, \"deck\"]}) }} >\n                <input onChange={(e) => { e.preventDefault(); this.setState({deck:e.target.value}) }} type=\"text\" placeholder=\"French, Spanish, etc...\" />\n        </form>\n        <p /><p />{this.backButton()}\n        </>    \n    }\n\n\n\n\n\n\n    renderWord() { return  <>\n        <p>Add a Card to {this.state.deck}</p>\n        <div className=\"StudyCard\">\n        <ButtonGroup>\n        <Button variant={this.state.side==\"Front\"? \"dark\" : \"light\"} onClick={() => this.setState({side: \"Front\"})}>Front</Button>\n        <Button variant={this.state.side==\"Back\"? \"dark\" : \"light\"} onClick={() => this.setState({side: \"Back\"})}>Back</Button></ButtonGroup>\n        <form onSubmit={(e) => {e.preventDefault(); \n                                if(this.state.side==\"Front\") { this.setState({side:\"Back\"})}\n                                else { if(this.state.front==\"\"||this.state.back==\"\") {this.setState({side:\"Front\"})} else { this.setState({side:\"Front\", front:\"\", back:\"\"}); alert(\"the card has been added to the selected deck\")}}} }\n        width=\"300px\">\n                <input type=\"text\" value={this.state.side ==\"Front\"? this.state.front : this.state.back }\n                                   onChange={(e) => { e.preventDefault();\n                                                     if(this.state.side==\"Front\") {this.setState({front:e.target.value})} \n                                                    else {this.setState({back:e.target.value})} }}\n                placeholder={this.state.side + \" of Card\"} />\n        </form></div>\n        <p /><p />\n        <div> <Button onClick={() => this.setState({render: \"select\", history:[...this.state.history, \"word\"]})}>Study another Topic</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<Button onClick={() => { this.setState({render: \"study\", history:[...this.state.history, \"word\"]}); alert(\"The only available deck is french. Pretend as though these were the cards you entered.\")}}>Study this Deck</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              <Button onClick={() => this.setState({render: \"deck\", history:[...this.state.history, \"word\"]})}>Make a new Deck</Button> </div>\n        <p /><p />{this.backButton()}\n        </>\n    }\n\n\n\n\n\n\n\n    renderSelect(){ \n        return <>\n               <p>Choose the Subject</p>\n               <div class=\"scroll\">\n               <Button onClick={() => this.setState({render: \"study\", history:[...this.state.history, \"select\"], deck:\"French\"})}>French</Button><p />\n               <Button onClick={()=> alert(\"Currently, the only example deck is French.\")}>Spanish</Button><p />\n               <Button onClick={()=> alert(\"Currently, the only example deck is French.\")}>Italian</Button><p />\n               <Button onClick={()=> alert(\"Currently, the only example deck is French.\")}>German</Button><p />\n               <Button onClick={()=> alert(\"Currently, the only example deck is French.\")}>Latin</Button><p />\n               <Button onClick={()=> alert(\"Currently, the only example deck is French.\")}>Java</Button><p />\n               <Button onClick={()=> alert(\"Currently, the only example deck is French.\")}>Japanese</Button><p />\n               <Button onClick={()=> alert(\"Currently, the only example deck is French.\")}>Javanese</Button><p />\n               <Button onClick={()=> alert(\"Currently, the only example deck is French.\")}>Lorem</Button><p />\n               <Button onClick={()=> alert(\"Currently, the only example deck is French.\")}>Ipsum</Button><p />\n               <Button onClick={()=> alert(\"Currently, the only example deck is French.\")}>Virology</Button><p />\n               <Button onClick={()=> alert(\"Currently, the only example deck is French.\")}>Topic</Button><p />\n               </div> \n                <p />\n               <form onSubmit={(e) => alert(\"The list of decks is filtered by the search term, case-independant\")} >\n                <input type=\"text\" placeholder=\"Search\" />\n                 </form>\n                <p />\n               <Button onClick={() => this.setState({render:\"deck\", history:[...this.state.history, \"select\"]})}>Make another deck</Button>\n               <p /><p />{this.backButton()}\n               </>\n    }\n    \n    backButton() {\n        if(this.state.history[0]===undefined) { return <p></p> }\n        else{ return <Button onClick={() => this.setState({render:this.state.history.pop()})}>Back</Button>}\n    }\n\n    flipCard() {\n        if (this.state.flip) { return <p> {this.state.card[this.state.index].front} </p>} \n        else { return <p> {this.state.card[this.state.index].back} </p>}\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}